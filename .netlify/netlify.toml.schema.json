{
  "$id": "https://netlify.com/netlif.toml.json",
  "$schema": "http://json-schema.org/draft-07/schema",
  "title": "Netlify Configuration File",
  "type": "object",
  "properties": {
    "build": {
      "$ref": "#/definitions/Build"
    },
    "plugins": {
      "$ref": "#/definitions/Plugins"
    },
    "redirects": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Redirect"
      }
    },
    "context": {
      "$ref": "#/definitions/ContextMap"
    },
    "headers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "for": {
            "type": "string"
          },
          "values": {
            "$ref": "#/definitions/HeaderMap"
          }
        },
        "required": [
          "for",
          "values"
        ]
      }
    },
    "functions": {
      "$ref": "#/definitions/Functions"
    },
    "dev": {
      "$ref": "#/definitions/Dev"
    }
  },
  "definitions": {
    "Functions": {
      "type": "object",
      "description": "Configuration for Netlify Functions. [Docs](https://docs.netlify.com/configure-builds/file-based-configuration/#functions)",
      "properties": {
        "directory": {
          "type": "string",
          "description": "Sets a custom directory for Netlify Functions",
          "pattern": "^((/|[\\w-]|\\.)+)+$"
        },
        "node_bundler": {
          "type": "string",
          "enum": [
            "esbuild",
            "zisi"
          ],
          "description": "The function bundling method used",
          "x-taplo": {
            "docs": {
              "enumValues": [
                "[ESBuild](https://esbuild.github.io/) - an extremely fast bundler",
                "\n[Zip it and Ship It](https://github.com/netlify/zip-it-and-ship-it)\n\nCreates Zip archives from Node.js, Go, and Rust programs. Those archives are ready to be uploaded to AWS Lambda.\nThis library is used under the hood by several Netlify features,\nincluding production CI builds, Netlify CLI and the JavaScript client.\n                  "
              ]
            }
          }
        },
        "external_node_modules": {
          "$ref": "#/definitions/Functions__external_node_modules"
        },
        "included_files": {
          "$ref": "#/definitions/Functions__included_files"
        }
      },
      "additionalProperties": {
        "$ref": "#/definitions/FunctionOverrides"
      }
    },
    "FunctionOverrides": {
      "type": "object",
      "properties": {
        "external_node_modules": {
          "$ref": "#/definitions/Functions__external_node_modules"
        },
        "included_files": {
          "$ref": "#/definitions/Functions__included_files"
        }
      }
    },
    "Functions__external_node_modules": {
      "description": "A list of Node.js modules that are copied to the bundled artifact\nwithout adjusting their source or references during the bundling process;\nonly applies when `node_bundler` is set to `esbuild`.\nThis property helps handle dependencies that can’t be inlined,\nsuch as modules with native add-ons.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Functions__included_files": {
      "description": "\nA list of additional paths to include in the function bundle.\nAlthough our build system includes statically referenced files (like `require(\"./some-file.js\")`) by default,\nincluded_files lets you specify additional files or directories and reference them dynamically in function code.\nYou can use `*` to match any character or prefix an entry with `!` to exclude files.\nPaths are relative to the [base directory](https://docs.netlify.com/configure-builds/get-started/#definitions-1).\n",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "Redirect": {
      "type": "object",
      "title": "Redirect",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "enum": [
            100,
            101,
            102,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            300,
            301,
            302,
            303,
            304,
            305,
            307,
            308,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            422,
            423,
            428,
            429,
            431,
            500,
            501,
            502,
            503,
            504,
            505,
            507,
            511
          ],
          "description": "The default HTTP status code is 301, but you can define a different one",
          "x-taplo": {
            "docs": {
              "enumValues": [
                "HTTP 100: CONTINUE",
                "HTTP 101: SWITCHING_PROTOCOLS",
                "HTTP 102: PROCESSING",
                "HTTP 200: OK",
                "HTTP 201: CREATED",
                "HTTP 202: ACCEPTED",
                "HTTP 203: NON_AUTHORITATIVE_INFORMATION",
                "HTTP 204: NO_CONTENT",
                "HTTP 205: RESET_CONTENT",
                "HTTP 206: PARTIAL_CONTENT",
                "HTTP 207: MULTI_STATUS",
                "HTTP 300: MULTIPLE_CHOICES",
                "HTTP 301: MOVED_PERMANENTLY",
                "HTTP 302: MOVED_TEMPORARILY",
                "HTTP 303: SEE_OTHER",
                "HTTP 304: NOT_MODIFIED",
                "HTTP 305: USE_PROXY",
                "HTTP 307: TEMPORARY_REDIRECT",
                "HTTP 308: PERMANENT_REDIRECT",
                "HTTP 400: BAD_REQUEST",
                "HTTP 401: UNAUTHORIZED",
                "HTTP 402: PAYMENT_REQUIRED",
                "HTTP 403: FORBIDDEN",
                "HTTP 404: NOT_FOUND",
                "HTTP 405: METHOD_NOT_ALLOWED",
                "HTTP 406: NOT_ACCEPTABLE",
                "HTTP 407: PROXY_AUTHENTICATION_REQUIRED",
                "HTTP 408: REQUEST_TIMEOUT",
                "HTTP 409: CONFLICT",
                "HTTP 410: GONE",
                "HTTP 411: LENGTH_REQUIRED",
                "HTTP 412: PRECONDITION_FAILED",
                "HTTP 413: REQUEST_TOO_LONG",
                "HTTP 414: REQUEST_URI_TOO_LONG",
                "HTTP 415: UNSUPPORTED_MEDIA_TYPE",
                "HTTP 416: REQUESTED_RANGE_NOT_SATISFIABLE",
                "HTTP 417: EXPECTATION_FAILED",
                "HTTP 418: IM_A_TEAPOT",
                "HTTP 419: INSUFFICIENT_SPACE_ON_RESOURCE",
                "HTTP 420: METHOD_FAILURE",
                "HTTP 422: UNPROCESSABLE_ENTITY",
                "HTTP 423: LOCKED",
                "HTTP 428: PRECONDITION_REQUIRED",
                "HTTP 429: TOO_MANY_REQUESTS",
                "HTTP 431: REQUEST_HEADER_FIELDS_TOO_LARGE",
                "HTTP 500: INTERNAL_SERVER_ERROR",
                "HTTP 501: NOT_IMPLEMENTED",
                "HTTP 502: BAD_GATEWAY",
                "HTTP 503: SERVICE_UNAVAILABLE",
                "HTTP 504: GATEWAY_TIMEOUT",
                "HTTP 505: HTTP_VERSION_NOT_SUPPORTED",
                "HTTP 507: INSUFFICIENT_STORAGE",
                "HTTP 511: NETWORK_AUTHENTICATION_REQUIRED"
              ]
            }
          }
        },
        "force": {
          "type": "boolean",
          "description": "By default, redirects won’t be applied if there’s a file with the same\npath as the one defined in the \"from\" property. Setting \"force\" to \"true\"\nwill make the redirect rule take precedence over any existing files."
        },
        "query": {
          "description": "query parameter mapping",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "conditions": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Language": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true,
              "minItems": 1
            },
            "Country": {
              "$ref": "#/definitions/Condition_Country"
            },
            "Role": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true,
              "minItems": 1
            }
          },
          "required": []
        },
        "signed": {
          "type": "string",
          "description": "Sign each request with a value defined in an environment variable"
        },
        "headers": {
          "$ref": "#/definitions/HeaderMap"
        },
        "edge_handler": {
          "type": "string"
        }
      },
      "required": [
        "from"
      ],
      "additionalProperties": false,
      "x-taplo": {
        "initKeys": [
          "from",
          "to"
        ]
      }
    },
    "Redirect_old": {
      "oneOf": [
        {
          "$ref": "#/definitions/Redirect_Simple"
        },
        {
          "$ref": "#/definitions/Redirect_RoleBased"
        }
      ]
    },
    "Redirect_Simple": {
      "type": "object",
      "title": "Redirect",
      "properties": {
        "from": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "enum": [
            100,
            101,
            102,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            300,
            301,
            302,
            303,
            304,
            305,
            307,
            308,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            422,
            423,
            428,
            429,
            431,
            500,
            501,
            502,
            503,
            504,
            505,
            507,
            511
          ],
          "description": "The default HTTP status code is 301, but you can define a different one",
          "x-taplo": {
            "docs": {
              "enumValues": [
                "HTTP 100: CONTINUE",
                "HTTP 101: SWITCHING_PROTOCOLS",
                "HTTP 102: PROCESSING",
                "HTTP 200: OK",
                "HTTP 201: CREATED",
                "HTTP 202: ACCEPTED",
                "HTTP 203: NON_AUTHORITATIVE_INFORMATION",
                "HTTP 204: NO_CONTENT",
                "HTTP 205: RESET_CONTENT",
                "HTTP 206: PARTIAL_CONTENT",
                "HTTP 207: MULTI_STATUS",
                "HTTP 300: MULTIPLE_CHOICES",
                "HTTP 301: MOVED_PERMANENTLY",
                "HTTP 302: MOVED_TEMPORARILY",
                "HTTP 303: SEE_OTHER",
                "HTTP 304: NOT_MODIFIED",
                "HTTP 305: USE_PROXY",
                "HTTP 307: TEMPORARY_REDIRECT",
                "HTTP 308: PERMANENT_REDIRECT",
                "HTTP 400: BAD_REQUEST",
                "HTTP 401: UNAUTHORIZED",
                "HTTP 402: PAYMENT_REQUIRED",
                "HTTP 403: FORBIDDEN",
                "HTTP 404: NOT_FOUND",
                "HTTP 405: METHOD_NOT_ALLOWED",
                "HTTP 406: NOT_ACCEPTABLE",
                "HTTP 407: PROXY_AUTHENTICATION_REQUIRED",
                "HTTP 408: REQUEST_TIMEOUT",
                "HTTP 409: CONFLICT",
                "HTTP 410: GONE",
                "HTTP 411: LENGTH_REQUIRED",
                "HTTP 412: PRECONDITION_FAILED",
                "HTTP 413: REQUEST_TOO_LONG",
                "HTTP 414: REQUEST_URI_TOO_LONG",
                "HTTP 415: UNSUPPORTED_MEDIA_TYPE",
                "HTTP 416: REQUESTED_RANGE_NOT_SATISFIABLE",
                "HTTP 417: EXPECTATION_FAILED",
                "HTTP 418: IM_A_TEAPOT",
                "HTTP 419: INSUFFICIENT_SPACE_ON_RESOURCE",
                "HTTP 420: METHOD_FAILURE",
                "HTTP 422: UNPROCESSABLE_ENTITY",
                "HTTP 423: LOCKED",
                "HTTP 428: PRECONDITION_REQUIRED",
                "HTTP 429: TOO_MANY_REQUESTS",
                "HTTP 431: REQUEST_HEADER_FIELDS_TOO_LARGE",
                "HTTP 500: INTERNAL_SERVER_ERROR",
                "HTTP 501: NOT_IMPLEMENTED",
                "HTTP 502: BAD_GATEWAY",
                "HTTP 503: SERVICE_UNAVAILABLE",
                "HTTP 504: GATEWAY_TIMEOUT",
                "HTTP 505: HTTP_VERSION_NOT_SUPPORTED",
                "HTTP 507: INSUFFICIENT_STORAGE",
                "HTTP 511: NETWORK_AUTHENTICATION_REQUIRED"
              ]
            }
          }
        },
        "force": {
          "type": "boolean",
          "description": "By default, redirects won’t be applied if there’s a file with the same\npath as the one defined in the \"from\" property. Setting \"force\" to \"true\"\nwill make the redirect rule take precedence over any existing files."
        },
        "query": {
          "description": "query parameter mapping",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "conditions": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Language": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true,
              "minItems": 1
            },
            "Country": {
              "$ref": "#/definitions/Condition_Country"
            },
            "Role": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true,
              "minItems": 1
            }
          },
          "required": []
        },
        "signed": {
          "type": "string",
          "description": "Sign each request with a value defined in an environment variable"
        },
        "headers": {
          "$ref": "#/definitions/HeaderMap"
        },
        "edge_handler": {
          "type": "string"
        }
      },
      "required": [
        "from"
      ],
      "additionalProperties": false,
      "x-taplo": {
        "initKeys": [
          "from",
          "to"
        ]
      }
    },
    "Redirect_RoleBased": {
      "type": "object",
      "title": "Redirect (Role Based)",
      "properties": {
        "from": {
          "type": "string"
        },
        "status": {
          "type": "integer",
          "enum": [
            100,
            101,
            102,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            300,
            301,
            302,
            303,
            304,
            305,
            307,
            308,
            400,
            401,
            402,
            403,
            404,
            405,
            406,
            407,
            408,
            409,
            410,
            411,
            412,
            413,
            414,
            415,
            416,
            417,
            418,
            419,
            420,
            422,
            423,
            428,
            429,
            431,
            500,
            501,
            502,
            503,
            504,
            505,
            507,
            511
          ],
          "description": "The default HTTP status code is 301, but you can define a different one",
          "x-taplo": {
            "docs": {
              "enumValues": [
                "HTTP 100: CONTINUE",
                "HTTP 101: SWITCHING_PROTOCOLS",
                "HTTP 102: PROCESSING",
                "HTTP 200: OK",
                "HTTP 201: CREATED",
                "HTTP 202: ACCEPTED",
                "HTTP 203: NON_AUTHORITATIVE_INFORMATION",
                "HTTP 204: NO_CONTENT",
                "HTTP 205: RESET_CONTENT",
                "HTTP 206: PARTIAL_CONTENT",
                "HTTP 207: MULTI_STATUS",
                "HTTP 300: MULTIPLE_CHOICES",
                "HTTP 301: MOVED_PERMANENTLY",
                "HTTP 302: MOVED_TEMPORARILY",
                "HTTP 303: SEE_OTHER",
                "HTTP 304: NOT_MODIFIED",
                "HTTP 305: USE_PROXY",
                "HTTP 307: TEMPORARY_REDIRECT",
                "HTTP 308: PERMANENT_REDIRECT",
                "HTTP 400: BAD_REQUEST",
                "HTTP 401: UNAUTHORIZED",
                "HTTP 402: PAYMENT_REQUIRED",
                "HTTP 403: FORBIDDEN",
                "HTTP 404: NOT_FOUND",
                "HTTP 405: METHOD_NOT_ALLOWED",
                "HTTP 406: NOT_ACCEPTABLE",
                "HTTP 407: PROXY_AUTHENTICATION_REQUIRED",
                "HTTP 408: REQUEST_TIMEOUT",
                "HTTP 409: CONFLICT",
                "HTTP 410: GONE",
                "HTTP 411: LENGTH_REQUIRED",
                "HTTP 412: PRECONDITION_FAILED",
                "HTTP 413: REQUEST_TOO_LONG",
                "HTTP 414: REQUEST_URI_TOO_LONG",
                "HTTP 415: UNSUPPORTED_MEDIA_TYPE",
                "HTTP 416: REQUESTED_RANGE_NOT_SATISFIABLE",
                "HTTP 417: EXPECTATION_FAILED",
                "HTTP 418: IM_A_TEAPOT",
                "HTTP 419: INSUFFICIENT_SPACE_ON_RESOURCE",
                "HTTP 420: METHOD_FAILURE",
                "HTTP 422: UNPROCESSABLE_ENTITY",
                "HTTP 423: LOCKED",
                "HTTP 428: PRECONDITION_REQUIRED",
                "HTTP 429: TOO_MANY_REQUESTS",
                "HTTP 431: REQUEST_HEADER_FIELDS_TOO_LARGE",
                "HTTP 500: INTERNAL_SERVER_ERROR",
                "HTTP 501: NOT_IMPLEMENTED",
                "HTTP 502: BAD_GATEWAY",
                "HTTP 503: SERVICE_UNAVAILABLE",
                "HTTP 504: GATEWAY_TIMEOUT",
                "HTTP 505: HTTP_VERSION_NOT_SUPPORTED",
                "HTTP 507: INSUFFICIENT_STORAGE",
                "HTTP 511: NETWORK_AUTHENTICATION_REQUIRED"
              ]
            }
          }
        },
        "force": {
          "type": "boolean",
          "description": "By default, redirects won’t be applied if there’s a file with the same\npath as the one defined in the \"from\" property. Setting \"force\" to \"true\"\nwill make the redirect rule take precedence over any existing files."
        },
        "query": {
          "description": "query parameter mapping",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "conditions": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "Language": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true,
              "minItems": 1
            },
            "Country": {
              "$ref": "#/definitions/Condition_Country"
            },
            "Role": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "uniqueItems": true,
              "minItems": 1
            }
          },
          "required": [
            "Role"
          ]
        },
        "signed": {
          "type": "string",
          "description": "Sign each request with a value defined in an environment variable"
        },
        "headers": {
          "$ref": "#/definitions/HeaderMap"
        },
        "edge_handler": {
          "type": "string"
        }
      },
      "required": [
        "from"
      ],
      "additionalProperties": false,
      "x-taplo": {
        "initKeys": [
          "from",
          "to"
        ]
      }
    },
    "Env": {
      "description": "Environment Variables",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "HeaderMap": {
      "description": "Custom Header Values",
      "type": "object",
      "properties": {
        "X-Frame-Options": {
          "enum": [
            "DENY",
            "SAMEORIGIN"
          ],
          "type": "string"
        },
        "X-XSS-Protection": {
          "type": "string"
        },
        "Content-Security-Policy": {
          "type": "string"
        },
        "Link": {
          "type": "string"
        },
        "Basic-Auth": {
          "type": "string",
          "description": "Basic-Auth allows you to password protect your whole site but is only available to paid accounts"
        },
        "X-From": {
          "type": "string"
        },
        "X-Api-Key": {
          "type": "string"
        }
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "ContextMap": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/Context"
      }
    },
    "Context": {
      "type": "object",
      "properties": {
        "base": {
          "type": "string",
          "description": "Directory to change to before starting a build.\nThis is where we will look for package.json/.nvmrc/etc.\nIf not set, defaults to the root directory."
        },
        "publish": {
          "type": "string",
          "description": "Directory that contains the deploy-ready HTML files and assets generated by\nthe build. This is relative to the base directory if one has been set, or the\nroot directory if a base has not been set\""
        },
        "command": {
          "type": "string",
          "description": "Default build command"
        },
        "environment": {
          "$ref": "#/definitions/Env"
        },
        "plugins": {
          "$ref": "#/definitions/Plugins"
        },
        "processing": {
          "$ref": "#/definitions/Processing"
        }
      }
    },
    "Build": {
      "type": "object",
      "description": "Settings in the [build] context are global and are applied to all contexts\nunless otherwise overridden by more specific contexts.",
      "properties": {
        "base": {
          "type": "string",
          "description": "Directory to change to before starting a build.\nThis is where we will look for package.json/.nvmrc/etc.\nIf not set, defaults to the root directory."
        },
        "publish": {
          "type": "string",
          "description": "Directory that contains the deploy-ready HTML files and assets generated by\nthe build. This is relative to the base directory if one has been set, or the\nroot directory if a base has not been set\""
        },
        "command": {
          "type": "string",
          "description": "Default build command"
        },
        "environment": {
          "$ref": "#/definitions/Env"
        },
        "processing": {
          "$ref": "#/definitions/Processing"
        },
        "edge_handlers": {
          "type": "string",
          "description": "Custom path to your Edge Handlers directory"
        },
        "ignore": {
          "type": "string",
          "description": "Bash command that will be run from the base directory to determine whether the site needs rebuilding or not"
        }
      }
    },
    "Plugins": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Plugin"
      },
      "description": "Build Plugins"
    },
    "Plugin": {
      "type": "object",
      "description": "[Docs](https://docs.netlify.com/configure-builds/build-plugins/#configure-settings)",
      "properties": {
        "package": {
          "type": "string",
          "description": "* For a plugin installed from npm, the npm package name of the plugin.\n* For a local plugin, the path to a directory containing the plugin’s index.js and manifest.yml files. The package value for a local plugin must start with . or /."
        },
        "inputs": {
          "$ref": "#/definitions/PluginInputs"
        }
      },
      "required": [
        "package"
      ]
    },
    "PluginInputs": {
      "description": "Custom Settings for Plugin",
      "type": "object",
      "additionalProperties": {
        "type": "string"
      }
    },
    "Processing": {
      "type": "object",
      "properties": {
        "skip_processing": {
          "type": "boolean"
        },
        "css": {
          "type": "object",
          "properties": {
            "bundle": {
              "type": "boolean"
            },
            "minify": {
              "type": "boolean"
            }
          },
          "x-taplo": {
            "initKeys": [
              "bundle",
              "minify"
            ]
          }
        },
        "js": {
          "type": "object",
          "properties": {
            "bundle": {
              "type": "boolean"
            },
            "minify": {
              "type": "boolean"
            }
          },
          "x-taplo": {
            "initKeys": [
              "bundle",
              "minify"
            ]
          }
        },
        "html": {
          "type": "object",
          "properties": {
            "pretty_urls": {
              "type": "boolean"
            }
          },
          "x-taplo": {
            "initKeys": [
              "pretty_urls"
            ]
          }
        },
        "images": {
          "type": "object",
          "properties": {
            "compress": {
              "type": "boolean"
            }
          },
          "x-taplo": {
            "initKeys": [
              "compress"
            ]
          }
        }
      }
    },
    "Dev": {
      "type": "object",
      "properties": {
        "command": {
          "type": "string",
          "description": "The command that starts your development server"
        },
        "port": {
          "type": "integer",
          "description": "The port that Netlify Dev is accessible from in the browser",
          "minimum": 1,
          "maximum": 65535
        },
        "targetPort": {
          "type": "integer",
          "description": "The port for your application server, framework, or site generator. If you specify values for both `command` and `targetPort`, framework must be `#custom.`",
          "minimum": 1,
          "maximum": 65535
        },
        "publish": {
          "type": "string",
          "description": "The path to your static content folder"
        },
        "jwtRolePath": {
          "type": "string",
          "description": "The object path that points to role values for JWT-based redirects.\n\nExample:\n``` toml\njwtRolePath = \"app_metadata.authorization.roles\"\n```"
        },
        "jwtSecret": {
          "type": "string",
          "description": "The secret used to verify tokens for JWT-based redirects."
        },
        "autoLaunch": {
          "type": "boolean",
          "description": "A boolean value that determines whether Netlify Dev launches the local server address in your browser"
        },
        "framework": {
          "type": "string",
          "description": "Setting to use if a project is detected incorrectly, flagged by multiple detectors, or requires a command and targetPort"
        },
        "https": {
          "type": "object",
          "description": "Specifies an SSL/TLS certificate and key file for the Netlify Dev local server. By default, Netlify Dev starts an HTTP server, but you can configure a certificate and key file if you require HTTPS",
          "properties": {
            "certFile": {
              "type": "string",
              "description": "Path to the certificate file"
            },
            "keyFile": {
              "type": "string",
              "description": "Path to the private key file"
            }
          },
          "required": [
            "certFile",
            "keyFile"
          ]
        }
      },
      "x-taplo": {
        "initKeys": [
          "command"
        ]
      }
    },
    "Condition_Country": {
      "type": "array",
      "items": {
        "x-taplo": {
          "docs": {
            "enumValues": [
              "Afghanistan",
              "Åland Islands",
              "Albania",
              "Algeria",
              "American Samoa",
              "Andorra",
              "Angola",
              "Anguilla",
              "Antarctica",
              "Antigua and Barbuda",
              "Argentina",
              "Armenia",
              "Aruba",
              "Australia",
              "Austria",
              "Azerbaijan",
              "Bahamas",
              "Bahrain",
              "Bangladesh",
              "Barbados",
              "Belarus",
              "Belgium",
              "Belize",
              "Benin",
              "Bermuda",
              "Bhutan",
              "Bolivia",
              "Bonaire, Sint Eustatius and Saba",
              "Bosnia and Herzegovina",
              "Botswana",
              "Bouvet Island",
              "Brazil",
              "British Indian Ocean Territory",
              "Brunei Darussalam",
              "Bulgaria",
              "Burkina Faso",
              "Burundi",
              "Cabo Verde",
              "Cambodia",
              "Cameroon",
              "Canada",
              "Cayman Islands",
              "Central African Republic",
              "Chad",
              "Chile",
              "China",
              "Christmas Island",
              "Cocos Islands",
              "Colombia",
              "Comoros",
              "Congo",
              "Congo",
              "Cook Islands",
              "Costa Rica",
              "Côte d'Ivoire",
              "Croatia",
              "Cuba",
              "Curaçao",
              "Cyprus",
              "Czech Republic",
              "Denmark",
              "Djibouti",
              "Dominica",
              "Dominican Republic",
              "Ecuador",
              "Egypt",
              "El Salvador",
              "Equatorial Guinea",
              "Eritrea",
              "Estonia",
              "Ethiopia",
              "Falkland Islands",
              "Faroe Islands",
              "Fiji",
              "Finland",
              "France",
              "French Guiana",
              "French Polynesia",
              "French Southern Territories",
              "Gabon",
              "Gambia",
              "Georgia",
              "Germany",
              "Ghana",
              "Gibraltar",
              "Greece",
              "Greenland",
              "Grenada",
              "Guadeloupe",
              "Guam",
              "Guatemala",
              "Guernsey",
              "Guinea",
              "Guinea-Bissau",
              "Guyana",
              "Haiti",
              "Heard Island and McDonald Islands",
              "Holy See",
              "Honduras",
              "Hong Kong",
              "Hungary",
              "Iceland",
              "India",
              "Indonesia",
              "Islamic Republic of Iran",
              "Iraq",
              "Ireland",
              "Isle of Man",
              "Israel",
              "Italy",
              "Jamaica",
              "Japan",
              "Jersey",
              "Jordan",
              "Kazakhstan",
              "Kenya",
              "Kiribati",
              "Democratic People's Republic of Korea",
              "Republic of Korea",
              "Kuwait",
              "Kyrgyzstan",
              "Lao People's Democratic Republic",
              "Latvia",
              "Lebanon",
              "Lesotho",
              "Liberia",
              "Libya",
              "Liechtenstein",
              "Lithuania",
              "Luxembourg",
              "Macao",
              "Macedonia",
              "Madagascar",
              "Malawi",
              "Malaysia",
              "Maldives",
              "Mali",
              "Malta",
              "Marshall Islands",
              "Martinique",
              "Mauritania",
              "Mauritius",
              "Mayotte",
              "Mexico",
              "Federated States of Micronesia",
              "Republic of Moldova",
              "Monaco",
              "Mongolia",
              "Montenegro",
              "Montserrat",
              "Morocco",
              "Mozambique",
              "Myanmar",
              "Namibia",
              "Nauru",
              "Nepal",
              "Netherlands",
              "New Caledonia",
              "New Zealand",
              "Nicaragua",
              "Niger",
              "Nigeria",
              "Niue",
              "Norfolk Island",
              "Northern Mariana Islands",
              "Norway",
              "Oman",
              "Pakistan",
              "Palau",
              "State of Palestine",
              "Panama",
              "Papua New Guinea",
              "Paraguay",
              "Peru",
              "Philippines",
              "Pitcairn",
              "Poland",
              "Portugal",
              "Puerto Rico",
              "Qatar",
              "Réunion",
              "Romania",
              "Russian Federation",
              "Rwanda",
              "Saint Barthélemy",
              "Saint Helena, Ascension and Tristan da Cunha",
              "Saint Kitts and Nevis",
              "Saint Lucia",
              "Saint Martin",
              "Saint Pierre and Miquelon",
              "Saint Vincent and the Grenadines",
              "Samoa",
              "San Marino",
              "Sao Tome and Principe",
              "Saudi Arabia",
              "Senegal",
              "Serbia",
              "Seychelles",
              "Sierra Leone",
              "Singapore",
              "Sint Maarten",
              "Slovakia",
              "Slovenia",
              "Solomon Islands",
              "Somalia",
              "South Africa",
              "South Georgia and the South Sandwich Islands",
              "South Sudan",
              "Spain",
              "Sri Lanka",
              "Sudan",
              "Suriname",
              "Svalbard and Jan Mayen",
              "Swaziland",
              "Sweden",
              "Switzerland",
              "Syrian Arab Republic",
              "Taiwan, Province of China",
              "Tajikistan",
              "United Republic of Tanzania",
              "Thailand",
              "Timor-Leste",
              "Togo",
              "Tokelau",
              "Tonga",
              "Trinidad and Tobago",
              "Tunisia",
              "Turkey",
              "Turkmenistan",
              "Turks and Caicos Islands",
              "Tuvalu",
              "Uganda",
              "Ukraine",
              "United Arab Emirates",
              "United Kingdom of Great Britain and Northern Ireland",
              "United States of America",
              "United States Minor Outlying Islands",
              "Uruguay",
              "Uzbekistan",
              "Vanuatu",
              "Venezuela (Bolivarian Republic of)",
              "Viet Nam",
              "Virgin Islands",
              "Virgin Islands",
              "Wallis and Futuna",
              "Western Sahara",
              "Yemen",
              "Zambia",
              "Zimbabwe"
            ]
          }
        },
        "type": "string",
        "enum": [
          "af",
          "ax",
          "al",
          "dz",
          "as",
          "ad",
          "ao",
          "ai",
          "aq",
          "ag",
          "ar",
          "am",
          "aw",
          "au",
          "at",
          "az",
          "bs",
          "bh",
          "bd",
          "bb",
          "by",
          "be",
          "bz",
          "bj",
          "bm",
          "bt",
          "bo",
          "bq",
          "ba",
          "bw",
          "bv",
          "br",
          "io",
          "bn",
          "bg",
          "bf",
          "bi",
          "cv",
          "kh",
          "cm",
          "ca",
          "ky",
          "cf",
          "td",
          "cl",
          "cn",
          "cx",
          "cc",
          "co",
          "km",
          "cg",
          "cd",
          "ck",
          "cr",
          "ci",
          "hr",
          "cu",
          "cw",
          "cy",
          "cz",
          "dk",
          "dj",
          "dm",
          "do",
          "ec",
          "eg",
          "sv",
          "gq",
          "er",
          "ee",
          "et",
          "fk",
          "fo",
          "fj",
          "fi",
          "fr",
          "gf",
          "pf",
          "tf",
          "ga",
          "gm",
          "ge",
          "de",
          "gh",
          "gi",
          "gr",
          "gl",
          "gd",
          "gp",
          "gu",
          "gt",
          "gg",
          "gn",
          "gw",
          "gy",
          "ht",
          "hm",
          "va",
          "hn",
          "hk",
          "hu",
          "is",
          "in",
          "id",
          "ir",
          "iq",
          "ie",
          "im",
          "il",
          "it",
          "jm",
          "jp",
          "je",
          "jo",
          "kz",
          "ke",
          "ki",
          "kp",
          "kr",
          "kw",
          "kg",
          "la",
          "lv",
          "lb",
          "ls",
          "lr",
          "ly",
          "li",
          "lt",
          "lu",
          "mo",
          "mk",
          "mg",
          "mw",
          "my",
          "mv",
          "ml",
          "mt",
          "mh",
          "mq",
          "mr",
          "mu",
          "yt",
          "mx",
          "fm",
          "md",
          "mc",
          "mn",
          "me",
          "ms",
          "ma",
          "mz",
          "mm",
          "na",
          "nr",
          "np",
          "nl",
          "nc",
          "nz",
          "ni",
          "ne",
          "ng",
          "nu",
          "nf",
          "mp",
          "no",
          "om",
          "pk",
          "pw",
          "ps",
          "pa",
          "pg",
          "py",
          "pe",
          "ph",
          "pn",
          "pl",
          "pt",
          "pr",
          "qa",
          "re",
          "ro",
          "ru",
          "rw",
          "bl",
          "sh",
          "kn",
          "lc",
          "mf",
          "pm",
          "vc",
          "ws",
          "sm",
          "st",
          "sa",
          "sn",
          "rs",
          "sc",
          "sl",
          "sg",
          "sx",
          "sk",
          "si",
          "sb",
          "so",
          "za",
          "gs",
          "ss",
          "es",
          "lk",
          "sd",
          "sr",
          "sj",
          "sz",
          "se",
          "ch",
          "sy",
          "tw",
          "tj",
          "tz",
          "th",
          "tl",
          "tg",
          "tk",
          "to",
          "tt",
          "tn",
          "tr",
          "tm",
          "tc",
          "tv",
          "ug",
          "ua",
          "ae",
          "gb",
          "us",
          "um",
          "uy",
          "uz",
          "vu",
          "ve",
          "vn",
          "vg",
          "vi",
          "wf",
          "eh",
          "ye",
          "zm",
          "zw"
        ]
      },
      "uniqueItems": true,
      "description": "Country",
      "minItems": 1
    }
  }
}
